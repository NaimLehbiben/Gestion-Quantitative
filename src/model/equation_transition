from src.utility.constant import DELTA, K
import numpy as np
import math

def calculate_a(mu, sigma):
    return np.transpose(np.array([mu -0.5*sigma, 0, 0]))

def calculate_A(kappa, DELTA):
    return np.array([
        [1, 0, 0],
        [0, math.exp(-kappa[2] * DELTA), 0],
        [0, 0, math.exp(-kappa[3] * DELTA)]
    ])

def calculate_Xt_plus_1(a, A, Xt, eta_t_plus_1):
    return a + A @ Xt + eta_t_plus_1

def calculate_ct(s, mu, lambda_, sigma, T, t):
    return s(t) + (mu + lambda_ - 0.5 * sigma) * (T - t)

def calculate_Ct(e, t, kappa, T):
    return e * np.exp(-kappa * (T - t))

def calculate_Yt(ct, Ct, Xt, epsilon_t):
    return ct + Ct @ Xt + epsilon_t